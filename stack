//4a.stack using array list collection class
import java.util.*;
class Gen_Stack<T>{
 ArrayList<T> stack;
 
 public Gen_Stack(){
 stack=new ArrayList<>();
 }
 public void push(T ele){
 stack.add(ele);
 }
 public T pop(){
 if(isEmpty()){
 System.out.println("Stack is empty");
 return null;
 }
 else
 return stack.remove(stack.size()-1);
 }
 public void display(){
 if(isEmpty())
 System.out.println("{}");
/*else{
 Iterator x=stack.iterator();
 while(x.hasNext())
 System.out.println(x.next()+" ");
 }*/
else{
 for(int i=stack.size()-1;i>=0;i--){
System.out.println(stack.get(i));
 }
 }
}
 public boolean search(T ele) {
 return stack.contains(ele);
 }
 public boolean isEmpty(){
 return stack.isEmpty();
 }
}
public class StackAT{
 public static void main(String[] args){
 int ch=0;
 Scanner sc=new Scanner(System.in);
 Gen_Stack<Integer> s=new Gen_Stack<>();
 System.out.println("\n1.push\n2.pop\n3.display\n4.search\nAny choice Exit");
 do{
 System.out.println("Enter the choice :");
 ch=sc.nextInt();
 switch(ch) {
 case 1:
 System.out.println("Enter the element:");
 int a=sc.nextInt();
 s.push(a);
 break;
case 2:
 Integer e=s.pop();
 if(e!=null)
 System.out.println(e+" is popped");
 else
 System.out.println("Stack is empty");
 break;
 case 3:
 System.out.println("The stack is");
 s.display();
 break;
 case 4:
 System.out.println("Enter element to search :");
 int ele=sc.nextInt();
 boolean x=s.search(ele);
 if(x==true)
 System.out.println("Found");
 else 
 System.out.println("Not Found"); 
 break;
default:
 System.out.println("Exit");
 System.exit(0);
 break;
 }
 }while(ch<5);
}
}


//4b.stack using linked list collection class
import java.util.*;
public class StackL<T>{
 LinkedList<T> stack;
 public StackL(){
 stack=new ArrayList<>();
 }
 public void push(T ele){
 stack.addFirst(ele);
 }
 public T pop(){
 if(isEmpty()){
 return null;
 }
 else
 return stack.removeFirst();
}
public void display() {
 if(isEmpty())
 System.out.println("{}");
 else{
 Iterator x=stack.descendingIterator();
 while(x.hasNext())
 System.out.println(x.next()+" ");
 }
}
public boolean search(T ele) {
 return stack.contains(ele);
}
public boolean isEmpty() {
 return stack.isEmpty();
 }
}
public class StackLT{
 public static void main(String[] args){
 int ch=0;
 Scanner sc=new Scanner(System.in);
 StackA<Integer> s=new StackA<>();
 System.out.println("\n1.push\n2.pop\n3.display\n4.search\nAny choice Exit");
do{
 System.out.println("Enter the choice :");
 ch=sc.nextInt();
 switch(ch) {
 case 1:
 System.out.println("Enter the element:");
 int a=sc.nextInt();
 s.push(a);
 break;
 case 2:
 Integer e=s.pop();
 if(e!=null)
 System.out.println(e+" is popped");
 else
 System.out.println("Stack is empty");
 break;
case 3:
 System.out.println("The stack is");
 s.display();
 break;
 case 4:
 System.out.println("Enter element to search :");
 int ele=sc.nextInt();
 if(s.search(ele))
 System.out.println("element found");
 else
 System.out.println("element not found");
 break;
default:
 System.out.println("Exit");
 System.exit(0);
 break;
 }
 }while(ch<5);
 }
}
